# Name of your application. Used to uniquely configure containers.
service: kamal_project_rails

# Name of the container image.
image: pratikingle09/kamal_project_rails

# Deploy to these servers.
servers:
  web:
    hosts:
      - 15.206.125.202          # server for main app
    labels:
      traefik.http.routers.kamaldeploy.entrypoints: websecure
      traefik.http.routers.kamaldeploy.rule: Host(`kamaldeploy.localhosted.in`)
      traefik.http.routers.kamaldeploy.tls.certresolver: letsencrypt
      traefik.http.middlewares.headers.headers.customRequestHeaders.X-Real-IP: "{remote_addr}"
      traefik.http.middlewares.headers.headers.customRequestHeaders.X-Forwarded-For: "{proxy_add_x_forwarded_for}"
      traefik.http.middlewares.headers.headers.customRequestHeaders.X-Forwarded-Proto: "{scheme}"
      traefik.http.routers.kamaldeploy.middlewares: headers
      traefik.http.services.kamaldeploy.loadbalancer.server.port: "3000"

  workers:
    hosts:
      - 3.110.49.102       # server for running jobs
    env:
      clear:
        SERVICE: job
    cmd: bundle exec sidekiq

# Credentials for your image host.
registry:
  username: pratikingle09
  password:
    - KAMAL_REGISTRY_PASSWORD

traefik:
  options:
    publish:
      - "443:443"
    volume:
      - "/letsencrypt/acme.json:/letsencrypt/acme.json"
  args:
    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"
    entryPoints.web.http.redirections.entryPoint.to: websecure
    entryPoints.web.http.redirections.entryPoint.scheme: https
    entryPoints.web.http.redirections.entrypoint.permanent: true
    certificatesResolvers.letsencrypt.acme.email: "pratikingle66@gmail.com"
    certificatesResolvers.letsencrypt.acme.storage: "/letsencrypt/acme.json"
    certificatesResolvers.letsencrypt.acme.httpchallenge: true
    certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web


# Inject ENV variables into containers (secrets come from .env).
env:
  secret:
    - RAILS_MASTER_KEY
    - SECRET_KEY_BASE
   # - MYSQL_PASSWORD 

ssh:
  keys:
    - ~/.ssh/id_rsa
  user: ubuntu

volumes:
  - "storage:/rails/storage"

# Configure custom healthcheck (default is /up on port 3000)
healthcheck:
  path: /up
  port: 3000

# Define any accessory services (like PostgreSQL, Redis, etc.)
  # accessories:
  #  db:
  #    image: mysql:8.0
  #    host: mysql-1bf698da-pratikingle66-3f18.h.aivencloud.com
  #    port: 18184
  #    env:
  #      clear:
  #        MYSQL_DATABASE: ${MYSQL_DATABASE}
  #        MYSQL_USER: ${MYSQL_USER}
  #        secret:
  #          - MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #    volumes:
  #      - "mysql_data:/var/lib/mysql"



# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Configure the role used to determine the primary_host. This host takes
# deploy locks, runs health checks during the deploy, and follow logs, etc.
# primary_role: web

# Controls if we abort when see a role with no hosts. Disabling this may be
# useful for more complex deploy configurations.
# allow_empty_roles: false
